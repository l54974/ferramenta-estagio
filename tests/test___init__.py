import unittest
import sys
import os
sys.path.insert(0, os.path.abspath('/home/diogo/test_generator_ai/projetos_open_source/schema/schema'))
from __init__ import *

class TestAutoGenerated(unittest.TestCase):
    def test__priority_0(self):
        resultado = _priority(None)
        self.assertEqual(resultado, 0)

    def test__invoke_with_optional_kwargs_0(self):
        resultado = _invoke_with_optional_kwargs(None)
        self.assertEqual(resultado, None)

    def test__callable_str_0(self):
        resultado = _callable_str(None)
        self.assertEqual(resultado, 'None')

    def test__plural_s_0(self):
        resultado = _plural_s(None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None, None, None)
        self.assertEqual(resultado, None)

    def test_code_0(self):
        resultado = code(None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None)
        self.assertEqual(resultado, None)

    def test___repr___0(self):
        resultado = __repr__(None)
        self.assertEqual(resultado, None)

    def test_args_0(self):
        resultado = args(None)
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, None)
        self.assertEqual(resultado, None)

    def test__build_schemas_0(self):
        resultado = _build_schemas(None)
        self.assertEqual(resultado, None)

    def test__build_schema_0(self):
        resultado = _build_schema(None, None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None)
        self.assertEqual(resultado, None)

    def test_reset_0(self):
        resultado = reset(None)
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None, '', 0, None)
        self.assertEqual(resultado, None)

    def test___init___1(self):
        resultado = __init__(None, '', 1, None)
        self.assertEqual(resultado, None)

    def test___init___2(self):
        resultado = __init__(None, '', -1, None)
        self.assertEqual(resultado, None)

    def test___repr___0(self):
        resultado = __repr__(None)
        self.assertEqual(resultado, None)

    def test_pattern_str_0(self):
        resultado = pattern_str(None)
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, '')
        self.assertEqual(resultado, None)

    def test_validate_1(self):
        resultado = validate(None, 'abc')
        self.assertEqual(resultado, None)

    def test_validate_2(self):
        resultado = validate(None, 'hello')
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None, None, None)
        self.assertEqual(resultado, None)

    def test___repr___0(self):
        resultado = __repr__(None)
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None, None, None, True, None, None, True)
        self.assertEqual(resultado, None)

    def test___init___1(self):
        resultado = __init__(None, None, None, True, None, None, False)
        self.assertEqual(resultado, None)

    def test___init___2(self):
        resultado = __init__(None, None, None, False, None, None, True)
        self.assertEqual(resultado, None)

    def test___repr___0(self):
        resultado = __repr__(None)
        self.assertEqual(resultado, None)

    def test_schema_0(self):
        resultado = schema(None)
        self.assertEqual(resultado, None)

    def test_description_0(self):
        resultado = description(None)
        self.assertEqual(resultado, None)

    def test_name_0(self):
        resultado = name(None)
        self.assertEqual(resultado, None)

    def test_ignore_extra_keys_0(self):
        resultado = ignore_extra_keys(None)
        self.assertEqual(resultado, None)

    def test__dict_key_priority_0(self):
        resultado = _dict_key_priority(None)
        self.assertEqual(resultado, None)

    def test__is_optional_type_0(self):
        resultado = _is_optional_type(None)
        self.assertEqual(resultado, None)

    def test_is_valid_0(self):
        resultado = is_valid(None, None)
        self.assertEqual(resultado, None)

    def test__prepend_schema_name_0(self):
        resultado = _prepend_schema_name(None, '')
        self.assertEqual(resultado, None)

    def test__prepend_schema_name_1(self):
        resultado = _prepend_schema_name(None, 'abc')
        self.assertEqual(resultado, None)

    def test__prepend_schema_name_2(self):
        resultado = _prepend_schema_name(None, 'hello')
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, None)
        self.assertEqual(resultado, None)

    def test_json_schema_0(self):
        resultado = json_schema(None, '', True)
        self.assertEqual(resultado, None)

    def test_json_schema_1(self):
        resultado = json_schema(None, '', False)
        self.assertEqual(resultado, None)

    def test_json_schema_2(self):
        resultado = json_schema(None, 'abc', True)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None)
        self.assertEqual(resultado, None)

    def test___hash___0(self):
        resultado = __hash__(None)
        self.assertEqual(resultado, None)

    def test___eq___0(self):
        resultado = __eq__(None, None)
        self.assertEqual(resultado, None)

    def test_reset_0(self):
        resultado = reset(None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None)
        self.assertEqual(resultado, None)

    def test__default_function_0(self):
        resultado = _default_function(None, None, None)
        self.assertEqual(resultado, None)

    def test___init___0(self):
        resultado = __init__(None, None, None, None)
        self.assertEqual(resultado, None)

    def test___str___0(self):
        resultado = __str__(None)
        self.assertEqual(resultado, None)

    def test___repr___0(self):
        resultado = __repr__(None)
        self.assertEqual(resultado, None)

    def test_description_0(self):
        resultado = description(None)
        self.assertEqual(resultado, None)

    def test_title_0(self):
        resultado = title(None)
        self.assertEqual(resultado, None)

    def test_schema_0(self):
        resultado = schema(None)
        self.assertEqual(resultado, None)

    def test_validate_0(self):
        resultado = validate(None, None)
        self.assertEqual(resultado, None)

    def test_uniq_0(self):
        resultado = uniq(None)
        self.assertEqual(resultado, None)

    def test__json_schema_0(self):
        resultado = _json_schema(None, True, None, None, True)
        self.assertEqual(resultado, None)

    def test__json_schema_1(self):
        resultado = _json_schema(None, True, None, None, False)
        self.assertEqual(resultado, None)

    def test__json_schema_2(self):
        resultado = _json_schema(None, False, None, None, True)
        self.assertEqual(resultado, None)

    def test__create_or_use_ref_0(self):
        resultado = _create_or_use_ref(None)
        self.assertEqual(resultado, None)

    def test__get_type_name_0(self):
        resultado = _get_type_name(None)
        self.assertEqual(resultado, None)

    def test__to_json_type_0(self):
        resultado = _to_json_type(None)
        self.assertEqual(resultado, None)

    def test__to_schema_0(self):
        resultado = _to_schema(None, True)
        self.assertEqual(resultado, None)

    def test__to_schema_1(self):
        resultado = _to_schema(None, False)
        self.assertEqual(resultado, None)

    def test__key_allows_additional_properties_0(self):
        resultado = _key_allows_additional_properties(None)
        self.assertEqual(resultado, None)

    def test__get_key_title_0(self):
        resultado = _get_key_title(None)
        self.assertEqual(resultado, None)

    def test__get_key_description_0(self):
        resultado = _get_key_description(None)
        self.assertEqual(resultado, None)

    def test__get_key_name_0(self):
        resultado = _get_key_name(None)
        self.assertEqual(resultado, None)


